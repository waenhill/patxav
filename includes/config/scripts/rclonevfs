#!/bin/bash

source /opt/seedbox-compose/includes/functions.sh
source /opt/seedbox-compose/includes/variables.sh

ansible-vault decrypt /opt/seedbox/variables/account.yml > /dev/null 2>&1

rm drive.txt team.txt > /dev/null 2>&1
sed -i '/#Debut team source/,/#Fin team source/d' /root/.config/rclone/rclone.conf > /dev/null 2>&1
sed -i '/#Debut team backup/,/#Fin team backup/d' /root/.config/rclone/rclone.conf > /dev/null 2>&1
sed -i '/support*/d' /opt/seedbox/variables/account.yml > /dev/null 2>&1
sed -i '/id_teamdrive*/d' /opt/seedbox/variables/account.yml > /dev/null 2>&1
sed -i '/remote*/d' /opt/seedbox/variables/account.yml > /dev/null 2>&1

clear


    	echo -e "${CRED}---------------------------------------------${CEND}"
    	echo -e "${CCYAN} /!\ Migration plexdrive ==> rclone vsf /!\ ${CEND}"
    	echo -e "${CRED}---------------------------------------------${CEND}"

function detection() {
## detection drive ##
i=1
grep "team_drive" /root/.config/rclone/rclone.conf | uniq > /tmp/drive.txt
grep "team_drive" /root/.config/rclone/rclone.conf > /dev/null 2>&1
if [ $? -eq 0 ]; then
  echo -e " ${BWHITE}* Teamdrives disponibles${NC}"
  echo ""
    while read line; do
      team=$(grep -iC 6 "$line" /root/.config/rclone/rclone.conf | head -n 1 | sed "s/\[//g" | sed "s/\]//g")
      echo "$team" >> /tmp/team.txt
      echo -e "${CGREEN}   $i. $team${CEND}"
      let "i+=1"
    done < /tmp/drive.txt
  nombre=$(wc -l /tmp/team.txt | cut -d ' ' -f1)
fi

[ -s /tmp/drive.txt ]
if [ $? -eq 1 ]; then
  grep "root_folder_id = ." /root/.config/rclone/rclone.conf | uniq > /tmp/drive.txt
  grep "root_folder_id = ." /root/.config/rclone/rclone.conf > /dev/null 2>&1
  if [ $? -eq 0 ]; then
      echo -e " ${BWHITE}* Gdrives disponibles${NC}"
      echo ""
      while read line; do
        team=$(grep -iC 6 "$line" /root/.config/rclone/rclone.conf | head -n 1 | sed "s/\[//g" | sed "s/\]//g")
        echo "$team" >> /tmp/team.txt
        echo -e "${CGREEN}   $i. $team${CEND}"
        let "i+=1"
      done < /tmp/drive.txt
      nombre=$(wc -l /tmp/team.txt | cut -d ' ' -f1)
  else
    grep "token" /root/.config/rclone/rclone.conf > /tmp/drive.txt
    grep "token" /root/.config/rclone/rclone.conf > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      echo -e " ${BWHITE}* Gdrives disponibles${NC}"
      echo ""
      while read line; do
        team=$(grep -iC 5 "$line" /root/.config/rclone/rclone.conf | head -n 1 | sed "s/\[//g" | sed "s/\]//g")
        echo "$team" >> /tmp/team.txt
        echo -e "${CGREEN}   $i. $team${CEND}"
        let "i+=1"
      done < /tmp/drive.txt
      nombre=$(wc -l /tmp/team.txt | cut -d ' ' -f1)
    fi
  fi
fi

while :
do
echo ""
read -rp $'\e[36m   Choisir le stockage principal associé à la Seedbox: \e[0m' RTYPE
echo ""
  if [ "$RTYPE" -le "$nombre" -a "$RTYPE" -ge "1"  ]; then
    i="$RTYPE"
    remote=$(sed -n "$i"p /tmp/team.txt)
    grep "team_drive" /root/.config/rclone/rclone.conf > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      id_teamdrive=$(sed -n "$i"p /tmp/drive.txt | cut -d '=' -f2 | sed 's/ //g')
      echo -e "${CCYAN}   Source séléctionnée: ${CGREEN}$remote - id: $id_teamdrive${CEND}"
      echo ""
    else
      echo -e "${CCYAN}   Source séléctionnée: ${CGREEN}$remote${CEND}"
      echo ""
    fi
    break
  else
    echo -e " ${CRED}* /!\ erreur de saisie /!\{NC}"
    echo ""
  fi
done
}

function clone() {
## si rclone n'existe pas
rclone="/usr/bin/rclone"
conf="/root/.config/rclone/rclone.conf"
## pas de rclone.conf
if [ ! -e "$rclone" ] ; then
 curl https://rclone.org/install.sh | bash
fi
}

function verif() {
detection
crypt="_crypt"
sed -i "/rclone/a \ \ \ remote: $remote$crypt" /opt/seedbox/variables/account.yml > /dev/null 2>&1
sed -i "/rclone/a \ \ \ id_teamdrive: $id_teamdrive" /opt/seedbox/variables/account.yml > /dev/null 2>&1
}

## Arrêt des services
systemctl stop rclone > /dev/null 2>&1
systemctl stop mergerfs > /dev/null 2>&1
systemctl stop plexdrive > /dev/null 2>&1
systemctl disable plexdrive > /dev/null 2>&1

## Supression services
rm /etc/systemd/system/plexdrive.service > /dev/null 2>&1
rm /usr/bin/plexdrive > /dev/null 2>&1
rm -R /mnt/plexdrive/ > /dev/null 2>&1
rm /etc/systemd/system/mergerfs.service > /dev/null 2>&1
rm /etc/systemd/system/rclone.service > /dev/null 2>&1

echo ""
 
########### mise en place rclone && mergerfs"############### 
read -rp $'\e[36m   Souhaitez vous créer un Share Drive?: (o/n) ? \e[0m' OUI

if [[ "$OUI" = "o" ]] || [[ "$OUI" = "O" ]]; then
/opt/seedbox-compose/includes/config/scripts/createrclone.sh 
fi
echo ""
clone
verif
echo ""
echo -e "${BLUE}### RCLONE ###${NC}"
ansible-playbook /opt/seedbox-compose/includes/config/roles/rclone/tasks/main.yml
echo ""
echo -e "${BLUE}### Unionfs-Fuse ###${NC}"
echo -e " ${BWHITE}* Installation Unionfs${NC}"
echo ""
ansible-playbook /opt/seedbox-compose/includes/config/roles/unionfs/tasks/main.yml
echo ""
echo -e "${BLUE}### Containers en cours de restart, merci de patienter ###${NC}"
echo ""
docker start $(docker ps -a -q --filter "status=exited") > /dev/null 2>&1
ansible-playbook /opt/seedbox-compose/includes/dockerapps/templates/ansible/ansible.yml
SEEDUSER=$(cat /tmp/name)

######### configuration des services#######################
echo ""
clear
echo -e " ${BWHITE}* Reconfiguration automatique cloudplow, crop, plex_autoscan${NC}"
echo ""
if [[ -d "/home/$SEEDUSER/scripts/cloudplow" ]]; then
ansible-playbook /opt/seedbox-compose/includes/config/roles/cloudplow/tasks/main.yml
fi
if [[ -d "/home/$SEEDUSER/scripts/crop" ]]; then
/opt/seedbox-compose/includes/config/scripts/crop.sh
ansible-playbook /opt/seedbox-compose/includes/config/roles/crop/tasks/main.yml
fi
if [[ -d "/home/$SEEDUSER/scripts/plex_autoscan" ]]; then
ansible-playbook /opt/seedbox-compose/includes/config/roles/plex_autoscan/tasks/main.yml
fi

##fin
    	echo -e "${CRED}------------------------------------------------------${CEND}"
    	echo -e "${CCYAN} /!\ Migration plexdrive ==> rclone vsf REUSSI!! /!\ ${CEND}"
    	echo -e "${CRED}------------------------------------------------------${CEND}"
pause
ansible-vault encrypt /opt/seedbox/variables/account.yml > /dev/null 2>&1
script_plexdrive
